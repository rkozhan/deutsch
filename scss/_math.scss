//@use "sass:math";
// px to %
//@function prc($pxOne, $pxTwo) {
//	$result: math.div($pxOne, $pxTwo) * 100%;
//	@return $result;
//}

// px to REM
/*
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}

// px to EM
@function em($px) {
	$result: math.div($px, 16) + em;
	@return $result;
}
*/

//НЕ РАБОТАЕТ ПОКА НЕ НАСТРОЕНО
// https://stackoverflow.com/questions/67849666/sass-built-in-moules-error-invalid-css-after

// принцип: padding = calc(minPad + (maxPad - minPad) * ((100vw - 320px) / (maxWidth - 320)
//$padding: calc(15px + (50 - 15) * ((100vw - 320px) / (1046 - 320)));

//AДАПТИВНЫЙ МИКСИН

@mixin adaptive($property, $startSize, $minSize) {
	$addSize: $startSize - $minSize;
	#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
}
@mixin value-adaptive($property, $startSize, $minSize, $value) {
	$addSize: $startSize - $minSize;
	#{$property}: #{$value}px calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
}

/*
@mixin adaptive-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type ==1 {
		//---------------только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer} + px) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	}

	@if $type ==2 {
		//---------------только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer} + px) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//---------------ВСЕГДА (у контейнера отключено max-width
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}

@mixin adaptive-zero-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type ==1 {
		//---------------только если меньше контейнера
		#{$property}: 0px $startSize + px;
		@media (max-width: #{$maxWidthContainer} + px) {
			#{$property}: 0px calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	}

	@if $type ==2 {
		//---------------только если больше контейнера
		#{$property}: 0px $startSize + px;
		@media (min-width: #{$maxWidthContainer} + px) {
			#{$property}: 0px calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//---------------ВСЕГДА (у контейнера отключено max-width
		#{$property}: 0px calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
*/
//@include adaptive-value("padding", 60, 15, 0);
